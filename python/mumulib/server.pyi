from _typeshed import Incomplete
from mumulib.consumers import consume as consume
from mumulib.mumutypes import SpecialResponse as SpecialResponse
from mumulib.producers import produce as produce
from typing import Any, Callable

DEFAULT_MAX_BODY_SIZE: Incomplete

async def send_error_response(send: Callable, status: int, error_type: str, message: str) -> None: ...
async def parse_json(receive: Callable, max_size: int = ...) -> Any | None: ...
async def parse_urlencoded(receive: Callable, max_size: int = ...) -> dict[str, Any]: ...
async def parse_multipart(receive: Callable, boundary: bytes, max_size: int = ...) -> dict[str, Any]: ...
def consumers_app(root: Any) -> Callable: ...
def EventSource(output_queue): ...
