from _typeshed import Incomplete
from mumulib.mumutypes import SpecialResponse as SpecialResponse
from typing import Any, Callable

MAX_LIST_INDEX: Incomplete
MIN_LIST_INDEX: Incomplete
MAX_KEY_LENGTH: int

def sanitize_dict_key(key: str) -> str: ...
def validate_list_index(index_str: str) -> int: ...
def add_consumer(adapter_for_type: type, conv: Callable) -> None: ...
async def consume(parent: Any, segments: list[str], state: dict[str, Any], send: Callable) -> Any | None: ...
async def consume_tuple(parent: tuple, segments: list[str], state: dict[str, Any], send: Callable) -> Any | None: ...
async def consume_list(parent: list[Any], segments: list[str], state: dict[str, Any], send: Callable) -> Any: ...
async def consume_dict(parent: dict[str, Any], segments: list[str], state: dict[str, Any], send: Callable) -> Any: ...
