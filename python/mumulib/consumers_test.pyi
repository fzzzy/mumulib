import unittest
from _typeshed import Incomplete
from mumulib.server import consumers_app as consumers_app

cov: Incomplete

async def request(asgi_app, method, path, body): ...

class Foo: ...

ASGI_APP: Incomplete

class TestASGIApp(unittest.IsolatedAsyncioTestCase):
    async def test_basic(self) -> None: ...
    async def test_basic_put_delete(self) -> None: ...
    async def test_tuple(self) -> None: ...
    async def test_list(self) -> None: ...
    async def test_nested_list(self) -> None: ...
    async def test_nested_dict(self) -> None: ...
    async def test_immutable(self) -> None: ...
    async def test_immutable_with_index(self) -> None: ...
    async def test_not_found(self) -> None: ...

class TestSecurityValidation(unittest.IsolatedAsyncioTestCase):
    async def test_list_index_out_of_bounds(self) -> None: ...
    async def test_list_negative_index_out_of_bounds(self) -> None: ...
    async def test_dict_key_too_long(self) -> None: ...
    async def test_dict_key_with_null_byte(self) -> None: ...
    async def test_dict_put_key_too_long(self) -> None: ...
    async def test_dict_put_key_with_null_byte(self) -> None: ...
    async def test_tuple_index_out_of_bounds(self) -> None: ...
